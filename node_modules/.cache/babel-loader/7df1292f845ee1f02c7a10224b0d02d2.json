{"ast":null,"code":"import _classCallCheck from \"/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/src/App.js\";\nimport React, { Component } from 'react';\nimport { Table, OverallTable, LabelTable } from './Table';\nimport openSocket from 'socket.io-client';\nvar tableNumbers = {\n  \"B1\": 0,\n  \"B2\": 1,\n  \"Pod\": 2\n};\nvar rowNumbers = {\n  \"Voltage\": 0,\n  \"Current\": 1,\n  \"Temp\": 2,\n  \"M1\": 0,\n  \"M2\": 1,\n  \"M3\": 2,\n  \"M4\": 3\n};\nvar columnNumbers = {\n  \"Min\": 0,\n  \"Avg\": 1,\n  \"Max\": 2\n}; //tableNum and rowNum starts at index 0\n\nfunction updateValue(d) {\n  var data = d.toString();\n  var val_name = data.split(':')[0];\n  var val = parseFloat(data.split(':')[1]);\n  window.appComponent.updateCell(val_name, val);\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    window.appComponent = _assertThisInitialized(_this);\n    _this.state = {\n      socket: openSocket('http://localhost:1337'),\n      data: null,\n      //each index of tables array indicates different table\n      //array indexes correspond to data's row numbers from 0 to n-1 rows\n      labeltables: [{\n        tableName: \"Battery\",\n        tableLabel: \"1\",\n        labels: ['Voltage', 'Current', 'Temperature'],\n        rows: 3\n      }, {\n        tableName: \"Battery\",\n        tableLabel: \"2\",\n        labels: ['Voltage', 'Current', 'Temperature'],\n        rows: 3\n      }, {\n        tableName: \"Pod\",\n        tableLabel: \"1\",\n        labels: ['Temperature', 'Motor 1 Current', 'Motor 2 Current', 'Motor 3 Current', 'Motor 4 Current'],\n        rows: 5\n      }],\n      livetables: [{\n        tableName: \"Battery\",\n        tableLabel: \"1\",\n        labels: ['Voltage', 'Current', 'Temperature'],\n        rows: 3,\n        minValues: [20, 21, 22],\n        maxValues: [40, 41, 42],\n        values: Array(3).fill(-1),\n        bgColors: Array(3).fill('aqua')\n      }, {\n        tableName: \"Battery\",\n        tableLabel: \"2\",\n        labels: ['Voltage', 'Current', 'Temperature'],\n        rows: 3,\n        minValues: [20, 21, 22],\n        maxValues: [40, 41, 42],\n        values: Array(3).fill(-1),\n        bgColors: Array(3).fill('aqua')\n      }, {\n        tableName: \"Pod\",\n        tableLabel: \"\",\n        labels: ['Temperature', 'Motor 1 Current', 'Motor 2 Current', 'Motor 3 Current', 'Motor 4 Current'],\n        rows: 5,\n        minValues: [20, 21, 22, 23, 24],\n        maxValues: [40, 41, 42, 43, 44],\n        values: Array(5).fill(-1),\n        bgColors: Array(5).fill('aqua')\n      }],\n      overalltables: [{\n        tableName: \"Battery\",\n        tableLabel: \"1\",\n        rows: 3,\n        values: [Array(3).fill(-1), Array(3).fill(-1), Array(3).fill(-1)],\n        bgColors: Array(3).fill('white')\n      }, {\n        tableName: \"Battery\",\n        tableLabel: \"2\",\n        rows: 3,\n        values: [Array(3).fill(-1), Array(3).fill(-1), Array(3).fill(-1)],\n        bgColors: Array(3).fill('white')\n      }, {\n        tableName: \"Pod\",\n        tableLabel: \"\",\n        rows: 5,\n        values: [Array(5).fill(-1), Array(5).fill(-1), Array(5).fill(-1)],\n        bgColors: Array(5).fill('white')\n      }]\n    };\n\n    _this.state.socket.on('socket_data', function (d) {\n      updateValue(d);\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateCell\",\n    value: function updateCell(tableString, newValue) {\n      var updatedState = this.state;\n      var newColor = 'lightgreen';\n      var tableNum;\n      var rowNum;\n      var modifyLive;\n      var columnNum;\n      var parsedTableString = tableString.split(\"_\");\n\n      if (parsedTableString.length != 3) {\n        console.log(\"Error: table string for update function is invalid.\");\n        return;\n      } //properly set tableNum index\n\n\n      if (!(parsedTableString[0] in tableNumbers)) {\n        console.log(\"Error: table string for update function is invalid.\");\n        return;\n      } else tableNum = tableNumbers[parsedTableString[0]]; //properly set rowNum\n\n\n      if (!(parsedTableString[1] in rowNumbers)) {\n        console.log(\"Error: table string for update function is invalid.\");\n        return;\n      } else rowNum = rowNumbers[parsedTableString[1]]; //properly set columnNum\n\n\n      if (parsedTableString[2] == \"Actual\") modifyLive = true;else {\n        modifyLive = false;\n\n        if (!(parsedTableString[2] in columnNumbers)) {\n          console.log(\"Error: table string for update function is invalid.\");\n          return;\n        } else columnNum = columnNumbers[parsedTableString[2]];\n      } //update value and bgColor in state object\n\n      if (modifyLive) {\n        if (newValue < this.state.livetables[tableNum].minValues[rowNum] || newValue > this.state.livetables[tableNum].maxValues[rowNum]) newColor = '#ff4d4d';\n        updatedState.livetables[tableNum].values[rowNum] = newValue;\n        updatedState.livetables[tableNum].bgColors[rowNum] = newColor;\n      } else {\n        console.log(newValue);\n        updatedState.overalltables[tableNum].values[columnNum][rowNum] = newValue;\n      }\n\n      this.setState(updatedState);\n    } //handleSubmit function used by button as a functionality test method for the updateValue function\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      updateValue(0, 1, 56);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Pod Health Viewer - UCLA Bruin HYPErloop\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Battery\"), React.createElement(\"table\", {\n        class: \"parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"labelcolumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(LabelTable, {\n        tableLabel: this.state.labeltables[0].tableLabel,\n        labels: this.state.labeltables[0].labels,\n        rows: this.state.labeltables[0].rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(LabelTable, {\n        tableLabel: this.state.labeltables[1].tableLabel,\n        labels: this.state.labeltables[1].labels,\n        rows: this.state.labeltables[1].rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"pagecolumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableLabel: this.state.livetables[0].tableLabel,\n        minValues: this.state.livetables[0].minValues,\n        maxValues: this.state.livetables[0].maxValues,\n        values: this.state.livetables[0].values,\n        bgColors: this.state.livetables[0].bgColors,\n        rows: this.state.livetables[0].rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(Table, {\n        tableLabel: this.state.livetables[1].tableLabel,\n        minValues: this.state.livetables[1].minValues,\n        maxValues: this.state.livetables[1].maxValues,\n        values: this.state.livetables[1].values,\n        bgColors: this.state.livetables[1].bgColors,\n        rows: this.state.livetables[1].rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"pagecolumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(OverallTable, {\n        values: this.state.overalltables[0].values,\n        bgColors: this.state.overalltables[0].bgColors,\n        rows: this.state.overalltables[0].rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(OverallTable, {\n        values: this.state.overalltables[1].values,\n        bgColors: this.state.overalltables[1].bgColors,\n        rows: this.state.overalltables[1].rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Pod\"), React.createElement(\"table\", {\n        class: \"parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"labelcolumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(LabelTable, {\n        tableLabel: this.state.labeltables[2].tableLabel,\n        labels: this.state.labeltables[2].labels,\n        rows: this.state.labeltables[2].rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"pagecolumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Table, {\n        labels: this.state.livetables[2].labels,\n        minValues: this.state.livetables[2].minValues,\n        maxValues: this.state.livetables[2].maxValues,\n        values: this.state.livetables[2].values,\n        bgColors: this.state.livetables[2].bgColors,\n        rows: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"pagecolumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(OverallTable, {\n        values: this.state.overalltables[2].values,\n        bgColors: this.state.overalltables[2].bgColors,\n        rows: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/akaashvenkat/Desktop/Hyperloop/new_test/BruinHyperloop_PodHealthViewer_ReactApp/src/App.js"],"names":["React","Component","Table","OverallTable","LabelTable","openSocket","tableNumbers","rowNumbers","columnNumbers","updateValue","d","data","toString","val_name","split","val","parseFloat","window","appComponent","updateCell","App","props","state","socket","labeltables","tableName","tableLabel","labels","rows","livetables","minValues","maxValues","values","Array","fill","bgColors","overalltables","on","tableString","newValue","updatedState","newColor","tableNum","rowNum","modifyLive","columnNum","parsedTableString","length","console","log","setState","event"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Table, OverallTable, LabelTable} from './Table';\nimport openSocket from 'socket.io-client';\n\nvar tableNumbers = {\n    \"B1\": 0,\n    \"B2\": 1,\n    \"Pod\": 2,\n};\n\nvar rowNumbers = {\n    \"Voltage\": 0,\n    \"Current\": 1,\n    \"Temp\": 2,\n    \"M1\": 0,\n    \"M2\": 1,\n    \"M3\": 2,\n    \"M4\": 3,\n};\n\nvar columnNumbers = {\n    \"Min\": 0,\n    \"Avg\": 1,\n    \"Max\": 2,\n};\n\n//tableNum and rowNum starts at index 0\nfunction updateValue(d)\n{\n    var data = d.toString();\n    var val_name = data.split(':')[0];\n    var val = parseFloat(data.split(':')[1]);\n\n    window.appComponent.updateCell(val_name, val);\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        window.appComponent = this;\n        this.state = {\n\t        socket: openSocket('http://localhost:1337'),\n            data: null,\n\n            //each index of tables array indicates different table\n            //array indexes correspond to data's row numbers from 0 to n-1 rows\n            labeltables: [\n                {\n                    tableName: \"Battery\",\n                    tableLabel: \"1\",\n                    labels: ['Voltage','Current','Temperature'],\n                    rows: 3,\n                },\n                {\n                    tableName: \"Battery\",\n                    tableLabel: \"2\",\n                    labels: ['Voltage','Current','Temperature'],\n                    rows: 3,\n                },\n                {\n                    tableName: \"Pod\",\n                    tableLabel: \"1\",\n                    labels: ['Temperature','Motor 1 Current','Motor 2 Current','Motor 3 Current','Motor 4 Current'],\n                    rows: 5,\n                },\n            ],\n\n            livetables: [\n                {\n                    tableName: \"Battery\",\n                    tableLabel: \"1\",\n                    labels: ['Voltage','Current','Temperature'],\n                    rows: 3,\n                    minValues: [20,21,22],\n                    maxValues: [40,41,42],\n                    values: Array(3).fill(-1),\n                    bgColors: Array(3).fill('aqua')\n                },\n                {\n                    tableName: \"Battery\",\n                    tableLabel: \"2\",\n                    labels: ['Voltage','Current','Temperature'],\n                    rows: 3,\n                    minValues: [20,21,22],\n                    maxValues: [40,41,42],\n                    values: Array(3).fill(-1),\n                    bgColors: Array(3).fill('aqua')\n                },\n                {\n                    tableName: \"Pod\",\n                    tableLabel: \"\",\n                    labels: ['Temperature','Motor 1 Current','Motor 2 Current','Motor 3 Current','Motor 4 Current'],\n                    rows: 5,\n                    minValues: [20,21,22,23,24],\n                    maxValues: [40,41,42,43,44],\n                    values: Array(5).fill(-1),\n                    bgColors: Array(5).fill('aqua')\n                }\n            ],\n\n            overalltables: [\n                {\n                    tableName: \"Battery\",\n                    tableLabel: \"1\",\n                    rows: 3,\n                    values: [\n                        Array(3).fill(-1),\n                        Array(3).fill(-1),\n                        Array(3).fill(-1),\n                    ],\n                    bgColors: Array(3).fill('white'),\n                },\n                {\n                    tableName: \"Battery\",\n                    tableLabel: \"2\",\n                    rows: 3,\n                    values: [\n                        Array(3).fill(-1),\n                        Array(3).fill(-1),\n                        Array(3).fill(-1),\n                    ],\n                    bgColors: Array(3).fill('white'),\n                },\n                {\n                    tableName: \"Pod\",\n                    tableLabel: \"\",\n                    rows: 5,\n                    values: [\n                        Array(5).fill(-1),\n                        Array(5).fill(-1),\n                        Array(5).fill(-1),\n                    ],\n                    bgColors: Array(5).fill('white'),\n                }\n            ],\n        };\n\t    this.state.socket.on('socket_data', d => { \n            updateValue(d)\n        });\n    }\n\n    updateCell(tableString, newValue)\n    {\n        const updatedState = this.state;\n\n        let newColor = 'lightgreen';\n        let tableNum;\n        let rowNum;\n        let modifyLive;\n        let columnNum;\n        let parsedTableString = tableString.split(\"_\");\n\n        if (parsedTableString.length != 3)\n        {\n            console.log(\"Error: table string for update function is invalid.\")\n            return;\n        }\n\n        //properly set tableNum index\n        if (!(parsedTableString[0] in tableNumbers))\n        {\n            console.log(\"Error: table string for update function is invalid.\")\n            return;\n        }\n        else\n            tableNum = tableNumbers[parsedTableString[0]];\n\n        //properly set rowNum\n        if (!(parsedTableString[1] in rowNumbers))\n        {\n            console.log(\"Error: table string for update function is invalid.\")\n            return;\n        }\n        else\n            rowNum = rowNumbers[parsedTableString[1]];\n\n        //properly set columnNum\n        if (parsedTableString[2] == \"Actual\")\n            modifyLive = true;\n        else\n        {\n            modifyLive = false;\n            if (!(parsedTableString[2] in columnNumbers))\n            {\n                console.log(\"Error: table string for update function is invalid.\")\n                return;\n            }\n            else\n                columnNum = columnNumbers[parsedTableString[2]];\n        }\n\n        //update value and bgColor in state object\n        if (modifyLive)\n        {\n            if (newValue < this.state.livetables[tableNum].minValues[rowNum] || newValue > this.state.livetables[tableNum].maxValues[rowNum])\n                newColor = '#ff4d4d';\n\n            updatedState.livetables[tableNum].values[rowNum] = newValue;\n            updatedState.livetables[tableNum].bgColors[rowNum] = newColor;\n        }\n        else\n        {\n            console.log(newValue);\n            updatedState.overalltables[tableNum].values[columnNum][rowNum] = newValue;\n        }\n\n        this.setState(updatedState);\n        \n    }\n\n    //handleSubmit function used by button as a functionality test method for the updateValue function\n    handleSubmit(event) {\n        updateValue(0,1,56);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n            \t<br />\n                <br />\n            \t<div className=\"title\">\n                    Pod Health Viewer - UCLA Bruin HYPErloop\n                </div>\n                <br />\n\n                <div className=\"tableTitle\">\n                    Battery\n                </div>\n\n                <table class=\"parent\">\n                    <div class=\"labelcolumn\">\n                        <LabelTable\n                        tableLabel={this.state.labeltables[0].tableLabel}\n                        labels={this.state.labeltables[0].labels}\n                        rows={this.state.labeltables[0].rows}\n                        />\n\n                        <LabelTable\n                        tableLabel={this.state.labeltables[1].tableLabel}\n                        labels={this.state.labeltables[1].labels}\n                        rows={this.state.labeltables[1].rows}\n                        />\n                    </div>\n\n                    <div class=\"pagecolumn\">\n                        <Table\n                        tableLabel={this.state.livetables[0].tableLabel}\n                        minValues={this.state.livetables[0].minValues}\n                        maxValues={this.state.livetables[0].maxValues}\n                        values={this.state.livetables[0].values}\n                        bgColors={this.state.livetables[0].bgColors}\n                        rows={this.state.livetables[0].rows}\n                        />\n\n                        <Table\n                        tableLabel={this.state.livetables[1].tableLabel}\n                        minValues={this.state.livetables[1].minValues}\n                        maxValues={this.state.livetables[1].maxValues}\n                        values={this.state.livetables[1].values}\n                        bgColors={this.state.livetables[1].bgColors}\n                        rows={this.state.livetables[1].rows}\n                        />\n                    </div>\n\n                    <div class=\"pagecolumn\">\n                        <OverallTable\n                        values={this.state.overalltables[0].values}\n                        bgColors={this.state.overalltables[0].bgColors}\n                        rows={this.state.overalltables[0].rows}\n                        />\n\n                        <OverallTable\n                        values={this.state.overalltables[1].values}\n                        bgColors={this.state.overalltables[1].bgColors}\n                        rows={this.state.overalltables[1].rows}\n                        />\n                    </div>\n                </table>\n\n                <br />\n\n                <div className=\"tableTitle\">\n                    Pod\n                </div>\n\n                <table class=\"parent\">\n                    <div class=\"labelcolumn\">\n                        <LabelTable\n                        tableLabel={this.state.labeltables[2].tableLabel}\n                        labels={this.state.labeltables[2].labels}\n                        rows={this.state.labeltables[2].rows}\n                        />\n                    </div>\n\n                    <div class=\"pagecolumn\">\n                        <Table\n                            labels={this.state.livetables[2].labels}\n                            minValues={this.state.livetables[2].minValues}\n                            maxValues={this.state.livetables[2].maxValues}\n                            values={this.state.livetables[2].values}\n                            bgColors={this.state.livetables[2].bgColors}\n                            rows={5}\n                        />\n                    </div>\n                    <div class=\"pagecolumn\">\n                        <OverallTable\n                            values={this.state.overalltables[2].values}\n                            bgColors={this.state.overalltables[2].bgColors}\n                            rows={5}\n                        />\n                    </div>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}